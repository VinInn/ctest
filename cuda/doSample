#!/bin/bash

# run the sampling multiple times for each functions updating the worst values in a file
#produce a new file fo worst value, do not overwrite the original one.

lscpu
nvidia-smi
echo  " "

cp worst.val0 worst.vali

export CCAP=60
export MPFR_DIR=/cvmfs/cms.cern.ch/slc7_amd64_gcc900/external/gcc/9.3.0/lib
for f in acos acosh asin asinh atan atanh cbrt cos cosh erf erfc exp exp10 exp2 expm1 j0 j1 log log10 log1p log2 sin sinh sqrt tan tanh y0 y1 lgamma tgamma; do
   nvcc -DFOO=$f -DUSE_DOUBLE -DWORST check_sample.cu --cudart shared -gencode arch=compute_$CCAP,code=sm_$CCAP -O3 -std=c++17 --compiler-options="-O3 -L$MPFR_DIR -lmpfr -lgmp -lm -fopenmp"
   # c++ -DFOO=$f -DUSE_DOUBLE -DWORST -O3 check_sample.cc -lmpfr -lgmp -lm -fopenmp
   echo " "
   echo "checking " $f
   time ./a.out -v -threshold 20000 -ifile worst.vali -ofile worst.valo
   time ./a.out -v -threshold 20000 -ifile worst.valo -ofile worst.vali
   time ./a.out -v -threshold 20000 -ifile worst.vali -ofile worst.valo
   time ./a.out -v -threshold 20000 -ifile worst.valo -ofile worst.vali
   cp worst.vali worst.valNew
done


