f= 2*tanh(y);
I=[-log(2)/2;log(2)/2];
filename="/tmp/polynomials";
print("") > filename;
for deg from 2 to 8 do begin
  p = fpminimax(f, deg,[|1,23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-40)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("#if ( DEGREE ==", deg, ")") >> filename;
  display=hexadecimal;
  print("   float p = ", horner(p) , ";") >> filename;
  print("#endif") >> filename;
end;

s5=fpminimax(sin(pi*x), [|1,3,5|], [|23...|], [0;1/4], floating, relative);
s7=fpminimax(sin(pi*x), [|1,3,5,7|],[|23...|], [0;1/4], floating, relative);
c=fpminimax(cos(pi*x), [|0,2,4,6|], [|1,23...|], [0;1/4], floating, relative);
display=decimal;
acc=floor(-log2(sup(supnorm(s5, sin(pi*x), [0;1/4], absolute, 2^(-40)))));
print( "sin 5 absolute accuracy is ",  acc, "bits" );
acc=floor(-log2(sup(supnorm(s7, sin(pi*x), [0;1/4], absolute, 2^(-40)))));
print( "sin 7 absolute accuracy is ",  acc, "bits" );
acc=floor(-log2(sup(supnorm(c, cos(pi*x), [0;1/4], absolute, 2^(-40)))));
print( "cons 7 absolute accuracy is ",  acc, "bits" );
display=hexadecimal;
print("   float s = ", horner(s5) , ";");
print("   float s = ", horner(s7) , ";");
print("   float c = ", horner(c) , ";");





s=fpminimax(sin(x), [|1,3,5,7|],   [|24...|], [0;1/4*pi], floating, relative);
c=fpminimax(cos(x), [|0,2,4,6|], [|24...|], [0;1/4*pi], floating, absolute);
display=decimal;
acc=floor(-log2(sup(supnorm(s, sin(x), [0;1/4*pi], absolute, 2^(-40)))));
print( " absolute accuracy is ",  acc, "bits" );
acc=floor(-log2(sup(supnorm(c, cos(x), [0;1/4*pi], absolute, 2^(-40)))));
print( " absolute accuracy is ",  acc, "bits" );
display=hexadecimal;
print("   float s = ", horner(s) , ";");
print("   float c = ", horner(c) , ";");
;

f= tanh(y)/y - 1;
I= [0;8];
filename="tanhox0_1.txt";
print("") > filename;
for deg from 2 to 8 do begin
  p = fpminimax(f, deg,[|1,23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-40)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("#if ( DEGREE ==", deg, ")") >> filename;
  display=hexadecimal;
  print("   float p = ", horner(p) , ";") >> filename;
  print("#endif") >> filename;
end;


f= tanh(y);
I= [0;1];
filename="tanh0_8.txt";
print("") > filename;
for deg from 2 to 8 do begin
  p = fpminimax(f, deg,[|1,23...|],I, floating, relative); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, relative, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("#if ( DEGREE ==", deg, ")") >> filename;
  display=hexadecimal;
  print("   float p = ", horner(p) , ";") >> filename;
  print("#endif") >> filename;
end;


f= log(exp(x)-1)*x;
I= [0.2;4];
filename="logExpH.txt";
print("") > filename;
for deg from 2 to 8 do begin
  p = fpminimax(f, deg,[|1,23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("#if ( DEGREE ==", deg, ")") >> filename;
  display=decimal;
  print("   float p = ", horner(p) , ";") >> filename;
  print("#endif") >> filename;
end;

f= log1p(-exp(-y))/y;
I= [log(2);2];
filename="logExpH.txt";
print("") > filename;
for deg from 2 to 8 do begin
  p = fpminimax(f, deg,[|1,23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("#if ( DEGREE ==", deg, ")") >> filename;
  display=hexadecimal;
  print("   float p = ", horner(p) , ";") >> filename;
  print("#endif") >> filename;
end;


f = y*log(-expm1(-y));
I= [10^(-34);log(2)];
filename="logExpL.txt";
print("") > filename;
for deg from 2 to 8 do begin
  p = fpminimax(f, deg,[|1,23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("#if ( DEGREE ==", deg, ")") >> filename;
  display=hexadecimal;
  print("   float p = ", horner(p) , ";") >> filename;
  print("#endif") >> filename;
end;


f = (1-erf(1/x))*exp(x^2);
I= [0;2];
filename="erf.txt";
print("") > filename;
for deg from 2 to 8 do begin
  p = fpminimax(f, deg,[|1,23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("#if ( DEGREE ==", deg, ")") >> filename;
  display=decimal;
  print("   float p = ", horner(p) , ";") >> filename;
  print("#endif") >> filename;
end;



f= ((atan((1-sqrt(x))/(1+sqrt(x)))-atan(1)))/sqrt(x);
I=[10^(-4);1.0];
filename="atan2.txt";
f= (atan((1-x)/(1+x))-3.1415926535897932384626434/4);
f= atan((1-x)/(1+x))-atan(1);
I=[-1+10^(-4);1.0];
filename="atan2.txt";
print("") > filename;
for deg from 3 to 15 by 2 do begin
  p = fpminimax(f, deg,[|23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("template<> inline float approx_atan2f_P<", deg, ">(float x){") >> filename;
  display=hexadecimal;
  print(" return ", horner(p) , ";") >> filename;
  print("}") >> filename;
end;


f= nearestint((2^31/pi)*(atan((1-x)/(1+x))-atan(1)));
f= (2^31/pi)*(atan((1-x)/(1+x))-atan(1));
I=[-1+10^(-4);1.0];
p = fpminimax(f, [|1,3,5,7,9,11|],[|23...|],I, floating, absolute); 
filename="atan2i.txt";
print("") > filename;
for deg from 3 to 13 by 2 do begin
  p = fpminimax(f, deg,[|23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("template<> inline float approx_atan2i_P<", deg, ">(float x){") >> filename;
  print(" return ", horner(p) , ";") >> filename;
  print("}") >> filename;
end;


f= (2^15/pi)*(atan((1-x)/(1+x))-atan(1));
I=[-1+10^(-4);1.0];
p = fpminimax(f, [|1,3,5,7,9,11|],[|23...|],I, floating, absolute);
filename="atan2s.txt";
print("") > filename;
for deg from 3 to 9 by 2 do begin
  p = fpminimax(f, deg,[|23...|],I, floating, absolute);
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg,
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("template<> inline float approx_atan2s_P<", deg, ">(float x){") >> filename;
  print(" return ", horner(p) , ";") >> filename;
  print("}") >> filename;
end;
 


I=[-0.99;0.99];


f= asin(x);
I=[-0.71;0.71];
filename="asin.txt";
print("") > filename;
L = [||];
for deg from 3 to 11 by 2 do begin
  L = L:.deg;
  print(L);
  p = fpminimax(f, L,[|23...|],I, floating, absolute,0+x); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("template<> inline float approx_asin_P<", deg, ">(float x){") >> filename;
  display=decimal;
  print(" return ", horner(p) , ";") >> filename;
  print("}") >> filename;
end;


p =  fpminimax(asin(sqrt(x))/sqrt(x),3,[|23...|],[0.0,0.5],floating, absolute,1+x);  

p =  fpminimax(asin(x)/x-1,[|2,4,6|],[|23...|],[-0.7,0.7],floating, absolute);

p =  fpminimax(asin(x),[|3,5,7,9,11|],[|23...|],[-0.7,0.7],floating, absolute,0+x);
p =  fpminimax(asin(x),[|3,5|],[|23...|],[-0.7,0.7],floating, absolute,0+x);
acc=floor(-log2(sup(supnorm(p, asin(x),[-0.7,0.7], absolute, 2^(-20)))));
print(acc);


p =  fpminimax(asin(x),7,[|23...|],[-0.7,0.7],floating, absolute);
acc=floor(-log2(sup(supnorm(p, asin(x),[-0.7,0.7], absolute, 2^(-20)))));


f= tan(x);
I=[-0.15;0.15];
filename="tan.txt";
print("") > filename;
for deg from 3 to 11 do begin
  p = fpminimax(f, deg,[|23...|],I, floating, absolute); 
  display=decimal;
  acc=floor(-log2(sup(supnorm(p, f, I, absolute, 2^(-20)))));
  print( "   // degree = ", deg, 
         "  => absolute accuracy is ",  acc, "bits" ) >> filename;
  print("template<> inline float limited_tanf_P<", deg, ">(float x){") >> filename;
  display=decimal;
  print(" return ", horner(p) , ";") >> filename;
  print("}") >> filename;
end

p =  fpminimax(tan(x),[|3,5,7|],[|23...|],[-0.15,0.15],floating, absolute,0+x);
p =  fpminimax(tan(x),[|3,5|],[|23...|],[-0.15,0.15],floating, absolute,0+x);

p =  fpminimax(atan(x),[|3,5,7|],[|23...|],[-0.4142135623730950,0.4142135623730950],floating, absolute,0+x);

p =  fpminimax(sin(x*(pi/2^31)),[|3,5,7|],[|23...|],[-(2^31)/4,2^31/4],floating, absolute,0+(pi/2^31)*x);
p =  fpminimax(cos(x)-1,[|4,6|],[|23...|],[-pi/4,pi/4],floating, absolute,0-x^2/2);

p =  fpminimax(sin(x*(pi/2^15)),[|3,5,7|],[|23...|],[-(2^15)/4,2^15/4],floating, absolute,0+(pi/2^15)*x);



plot [-1:1] x * (-664694912 + x*x * 131209024) -683565276*(atan((1-x)/(1+x))-atan(1));
plot [-1:1] x * (-680392064 + x*x * (197338400 + x*x * (-54233256)))  -683565276*(atan((1-x)/(1+x))-atan(1));
plot [-1:1] x * (-683027840 + x*x * (219543904 + x*x * (-99981040 + x*x * 26649684))) -683565276*(atan((1-x)/(1+x))-atan(1));
plot [-1:1] x * (-683473920 + x*x * (225785056 + x*x * (-123151184 + x*x * (58210592 + x*x * (-14249276))))) -683565276*(atan((1-x)/(1+x))-atan(1));
plot [-1:1] x * (-683549696 + x*x * (227369312 + x*x * (-132297008 + x*x * (79584144 + x*x * (-35987016 + x*x * 8010488))))) -683565276*(atan((1-x)/(1+x))-atan(1));

plot [-1:1] x * (-683562624 + x*x * (227746080 + x*x * (-135400128 + x*x * (90460848 + x*x * (-54431464 + x*x * (22973256 + x*x * (-4657049)))))))  -683565276*(atan((1-x)/(1+x))-atan(1));
